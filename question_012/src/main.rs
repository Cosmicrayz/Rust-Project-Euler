/* Prompt: The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?



Link: https://projecteuler.net/problem=12
*/
fn calculate_number_of_factors(num: &usize) -> usize {
    let factors = primes::factorise(num);
    // If n = p1^a1 * p2^a2 ... where the p's are primes then the numbers of factors is given by the product (a1+1)(a2+1)...
    let total_factors: usize = factors.iter().map(|(_k, v)| v + 1).product::<usize>();
    return total_factors;
}

fn main() {
    // 5050 is a crude lower bound
    let mut n = 100;
    let mut flag = true;
    while flag {
        let t_n = n * (n + 1) / 2;
        if calculate_number_of_factors(&t_n) > 500 {
            flag = false;
            println!(
                "The first triangular number with over 500 divisors is {}",
                t_n
            )
            // The first triangular number with over 500 divisors is 76576500
        }
        n += 1;
    }
}
